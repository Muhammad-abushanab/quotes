/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void givenTestQuotes_ShouldReturnARandom() {
        Qoute quote1 = new Qoute("Mohammad", "Student in ASAC");
        Qoute quote2 = new Qoute("ASAC", "Java Programming Course");
        Qoute[] quotes = {quote1, quote2};
        QouteRandomizer randomizer = new QouteRandomizer(quotes);

        Qoute randomQuote = randomizer.getRandomQoute();

        assertNotNull(randomQuote);
        assertTrue(randomQuote == quote1 || randomQuote == quote2);
    }

    @Test
    public void givenAuthorName_AndTheUserIsSearchingByAuthor_ShouldReturnTheQuotesBasedOnTheAuthor() {
        Qoute quote1 = new Qoute("Mohammad", "Student in ASAC");
        Qoute quote2 = new Qoute("ASAC", "Java Programming Course");
        Qoute quote3 = new Qoute("Mohammad", "Student in ASAC");
        Qoute[] quotes = {quote1, quote2, quote3};
        QouteRandomizer randomizer = new QouteRandomizer(quotes);

        List<Qoute> author1Quotes = randomizer.searchByAuthor("Mohammad");
        List<Qoute> author2Quotes = randomizer.searchByAuthor("ASAC");
        List<Qoute> nonExistentAuthorQuotes = randomizer.searchByAuthor("Non Existent");

        assertNotNull(author1Quotes);
        assertNotNull(author2Quotes);
        assertNotNull(nonExistentAuthorQuotes);

        assertEquals(2, author1Quotes.size());
        assertEquals(1, author2Quotes.size());
        assertEquals(0, nonExistentAuthorQuotes.size());

        assertTrue(author1Quotes.contains(quote1));
        assertTrue(author1Quotes.contains(quote3));
        assertTrue(author2Quotes.contains(quote2));
    }

    @Test
    public void givenSearchByAuthorWithNullQuotes_ShouldReturnNull() {
        QouteRandomizer randomizer = new QouteRandomizer(null);

        List<Qoute> authorQuotes = randomizer.searchByAuthor("Author");

        assertNull(authorQuotes);
    }
}
